(You should decide which architecture( or combination of architecture) you need to follow). In addition, I would like to see both the physical and logical components using a diagram)

Repository Architecture
  The repository pattern of architecture would probably work best for this project since we are required to gather, organize, and store (perhaps for long term) large amounts of data for later access and analysis.

Client-Server Architecture

Pipe & Filter Architecture

Cloud Architecture

Model View Control Architecture
  This could likely work well, too.


Parts of program (basic systems, could also be a layout for layered):
-Database controller
  *Database is local, possibly moved to server later
  *Possibly implement as a singleton object
  *Ensure only 1 operation done to dasabase at a time
    -Maybe use an arraylist of the commands (as strings?) for a queue, and make it do only 1 at a time
-API handler
  *gets data from API and parses it, sends to database
-Data analyzer
  *Checks data for anomolies (extreme weather, impossible data, etc)
-GUI
  *Shows data from database, and allows manipulation of it (new locations to track, reload/get new data, etc)
  *If allowing weather maps, can get and show them using API handler
